# ================================================
# Configuraci√≥n de Railway para Milo's Shop
# Alternativa a railway.json en formato TOML
# ================================================

[build]
builder = "dockerfile"
dockerfilePath = "Dockerfile"
# Usa cache de Docker para builds m√°s r√°pidos
buildCache = true

[deploy]
# Configuraci√≥n de despliegue
numReplicas = 1
region = "us-west1"
startCommand = "node --enable-source-maps dist/index.js"
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 3

# Health check
healthcheckPath = "/api/health"
healthcheckTimeout = 5
healthcheckInterval = 30

# Recursos (ajusta seg√∫n tu plan de Railway)
[deploy.resources]
cpu = "0.5"
memory = "512MB"

# Variables de entorno predeterminadas
[env]
NODE_ENV = "production"
LOG_LEVEL = "info"

# Puerto din√°mico de Railway
PORT = "${{PORT}}"

# URL de CORS autom√°tica
CORS_ORIGIN = "https://${{RAILWAY_PUBLIC_DOMAIN}}"

# Configuraci√≥n de base de datos
# DATABASE_URL ser√° proporcionada por Railway PostgreSQL addon
# o configura tu Neon serverless URL aqu√≠

# Scripts de ciclo de vida
[scripts]
# Script para ejecutar despu√©s del build
postBuild = """
echo "‚úÖ Build completado para Milo's Shop"
echo "üì¶ Verificando archivos compilados..."
ls -la dist/
ls -la client/dist/
"""

# Script para ejecutar antes del deploy
preDeploy = """
echo "üöÄ Preparando deploy de Milo's Shop..."
echo "üìä Informaci√≥n del sistema:"
node --version
npm --version
"""